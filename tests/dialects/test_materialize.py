from tests.dialects.test_dialect import Validator


class TestMaterialize(Validator):
    dialect = "materialize"

    def test_materialize(self):
        self.validate_all(
            "MZ_NOW()",
            write={
                "materialize": "MZ_NOW()",
                "postgres": "CURRENT_TIMESTAMP",
            },
        )
        self.validate_all(
            "CREATE TABLE example (id INT PRIMARY KEY, name TEXT)",
            write={
                "materialize": "CREATE TABLE example (id INT, name TEXT)",
                "postgres": "CREATE TABLE example (id INT PRIMARY KEY, name TEXT)",
            },
        )
        self.validate_all(
            "INSERT INTO example (id, name) VALUES (1, 'Alice') ON CONFLICT(id) DO NOTHING",
            write={
                "materialize": "INSERT INTO example (id, name) VALUES (1, 'Alice')",
                "postgres": "INSERT INTO example (id, name) VALUES (1, 'Alice') ON CONFLICT(id) DO NOTHING",
            },
        )
        self.validate_all(
            "CREATE TABLE example (id SERIAL, name TEXT)",
            write={
                "materialize": "CREATE TABLE example (id INT NOT NULL, name TEXT)",
                "postgres": "CREATE TABLE example (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name TEXT)",
            },
        )
        self.validate_all(
            "CREATE TABLE example (id INT AUTO_INCREMENT, name TEXT)",
            write={
                "materialize": "CREATE TABLE example (id INT NOT NULL, name TEXT)",
                "postgres": "CREATE TABLE example (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name TEXT)",
            },
        )
        self.validate_all(
            'SELECT JSON_EXTRACT_PATH_TEXT(\'{ "farm": {"barn": { "color": "red", "feed stocked": true }}}\', \'farm\', \'barn\', \'color\')',
            write={
                "materialize": 'SELECT JSON_EXTRACT_PATH_TEXT(\'{ "farm": {"barn": { "color": "red", "feed stocked": true }}}\', \'farm\', \'barn\', \'color\')',
                "postgres": 'SELECT JSON_EXTRACT_PATH_TEXT(\'{ "farm": {"barn": { "color": "red", "feed stocked": true }}}\', \'farm\', \'barn\', \'color\')',
            },
        )
        self.validate_all(
            "CREATE TABLE example (id INT, name LIST)",
            write={
                "materialize": "CREATE TABLE example (id INT, name TEXT)",
            },
        )
        self.validate_all("SELECT LIST[1, 2, 3]", read={"materialize": "SELECT LIST[1, 2, 3]"})
